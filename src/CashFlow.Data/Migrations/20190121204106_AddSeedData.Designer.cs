// <auto-generated />
using System;
using CashFlow.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CashFlow.Data.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20190121204106_AddSeedData")]
    partial class AddSeedData
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.1-servicing-10028")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("CashFlow.Persistence.Entities.Account", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTimeOffset>("DateCreated");

                    b.Property<DateTimeOffset?>("DateModified");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(250);

                    b.Property<int>("Type");

                    b.HasKey("Id");

                    b.ToTable("Accounts");

                    b.HasData(
                        new
                        {
                            Id = new Guid("9de4b69a-79c4-4613-b2c6-c2145979a158"),
                            DateCreated = new DateTimeOffset(new DateTime(2019, 1, 21, 20, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 1, 0, 0, 0)),
                            Name = "Cash",
                            Type = 1
                        },
                        new
                        {
                            Id = new Guid("4612dc6d-708f-441f-bd29-50d955221d88"),
                            DateCreated = new DateTimeOffset(new DateTime(2019, 1, 21, 20, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 1, 0, 0, 0)),
                            Name = "Zicht",
                            Type = 2
                        },
                        new
                        {
                            Id = new Guid("6fa8f317-11bc-40c5-8c3b-c5895cf5e9f4"),
                            DateCreated = new DateTimeOffset(new DateTime(2019, 1, 21, 20, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 1, 0, 0, 0)),
                            Name = "Spaar",
                            Type = 3
                        });
                });

            modelBuilder.Entity("CashFlow.Persistence.Entities.Code", b =>
                {
                    b.Property<string>("Name")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(100);

                    b.Property<DateTimeOffset>("DateCreated");

                    b.HasKey("Name");

                    b.ToTable("Codes");

                    b.HasData(
                        new
                        {
                            Name = "6000 aankopen",
                            DateCreated = new DateTimeOffset(new DateTime(2019, 1, 21, 20, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 1, 0, 0, 0))
                        },
                        new
                        {
                            Name = "6100 diensten en diverse goederen",
                            DateCreated = new DateTimeOffset(new DateTime(2019, 1, 21, 20, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 1, 0, 0, 0))
                        },
                        new
                        {
                            Name = "6560 bankkosten",
                            DateCreated = new DateTimeOffset(new DateTime(2019, 1, 21, 20, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 1, 0, 0, 0))
                        },
                        new
                        {
                            Name = "6600 uitzonderlijke kosten",
                            DateCreated = new DateTimeOffset(new DateTime(2019, 1, 21, 20, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 1, 0, 0, 0))
                        },
                        new
                        {
                            Name = "7000 verkopen",
                            DateCreated = new DateTimeOffset(new DateTime(2019, 1, 21, 20, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 1, 0, 0, 0))
                        },
                        new
                        {
                            Name = "7400 diverse opbrengsten",
                            DateCreated = new DateTimeOffset(new DateTime(2019, 1, 21, 20, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 1, 0, 0, 0))
                        },
                        new
                        {
                            Name = "7510 ontvangen bankintresten",
                            DateCreated = new DateTimeOffset(new DateTime(2019, 1, 21, 20, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 1, 0, 0, 0))
                        });
                });

            modelBuilder.Entity("CashFlow.Persistence.Entities.FinancialYear", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTimeOffset>("DateCreated");

                    b.Property<bool>("IsActive");

                    b.Property<string>("Name")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.ToTable("FinancialYears");
                });

            modelBuilder.Entity("CashFlow.Persistence.Entities.Supplier", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("ContactInfo");

                    b.Property<DateTimeOffset>("DateCreated");

                    b.Property<DateTimeOffset?>("DateModified");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.ToTable("Suppliers");
                });
#pragma warning restore 612, 618
        }
    }
}
